name: PR CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint-build-test:
    name: Lint, Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [24] # TODO: 20, 22, 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
          
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run lint
        run: pnpm run lint
        
      - name: Run build
        run: pnpm run build
        
      - name: Run tests
        run: pnpm test
        env:
          USE_TEST_FIXTURES: true
          
      - name: Run integration tests
        run: pnpm run test:integration
        env:
          USE_TEST_FIXTURES: true

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: meteoswiss-mcp:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Docker container
        run: |
          # Start container in background
          docker run -d --name test-container -p 3000:3000 meteoswiss-mcp:test
          
          # Wait for container to start
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:3000/health || exit 1
          
          # Clean up
          docker stop test-container
          docker rm test-container

  security-audit:
    name: Security & Dependency Check
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run security audit
        run: pnpm audit
        
      - name: Check for outdated packages
        run: pnpm outdated
